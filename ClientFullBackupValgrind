valgrind --leak-check=yes ./client -f /home/sagar/new/ 
==15272== Memcheck, a memory error detector
==15272== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==15272== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==15272== Command: ./client -f /home/sagar/new/
==15272== 
-----------------------------------
Argument no : 2 Source Directory    /home/sagar/new/
-----------------------------------
Files to be backedup : /home/sagar/new/file.txt
==15272== Syscall param socketcall.sendto(msg) points to uninitialised byte(s)
==15272==    at 0x4B5B560: send (send.c:28)
==15272==    by 0x109A39: sendfromdirectory(char*, int) (in /home/sagar/project/Remote_backup/client)
==15272==    by 0x1095E2: main (in /home/sagar/project/Remote_backup/client)
==15272==  Address 0x1ffefffd91 is on thread 1's stack
==15272==  in frame #1, created by sendfromdirectory(char*, int) (???:)
==15272== 
Files to be backedup : /home/sagar/new/script2
Files to be backedup : /home/sagar/new/test.cpp
Files to be backedup : /home/sagar/new/search.cpp
==15272== 
==15272== HEAP SUMMARY:
==15272==     in use at exit: 32,816 bytes in 1 blocks
==15272==   total heap usage: 3 allocs, 2 frees, 106,544 bytes allocated
==15272== 
==15272== 32,816 bytes in 1 blocks are definitely lost in loss record 1 of 1
==15272==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==15272==    by 0x4B18F48: __alloc_dir (opendir.c:118)
==15272==    by 0x4B18F48: opendir_tail (opendir.c:69)
==15272==    by 0x4B18F48: opendir (opendir.c:92)
==15272==    by 0x10980C: sendfromdirectory(char*, int) (in /home/sagar/project/Remote_backup/client)
==15272==    by 0x1095E2: main (in /home/sagar/project/Remote_backup/client)
==15272== 
==15272== LEAK SUMMARY:
==15272==    definitely lost: 32,816 bytes in 1 blocks
==15272==    indirectly lost: 0 bytes in 0 blocks
==15272==      possibly lost: 0 bytes in 0 blocks
==15272==    still reachable: 0 bytes in 0 blocks
==15272==         suppressed: 0 bytes in 0 blocks
==15272== 
==15272== Use --track-origins=yes to see where uninitialised values come from
==15272== For lists of detected and suppressed errors, rerun with: -s
==15272== ERROR SUMMARY: 5 errors from 2 contexts (suppressed: 0 from 0)

